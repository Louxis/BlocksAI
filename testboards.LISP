(defun empty-board (&optional (board-size 14))
  "Retorna um tabuleiro 14x14 (default) com as casas vazias"
	(make-list board-size :initial-element (make-list board-size :initial-element '0))
)

(defun test-board ()
	'(
	(0 0 0 0 2 2 0 0 2 0 2 0 2 0)
	(0 0 0 0 2 2 0 2 2 2 0 2 2 2)
	(0 0 0 2 0 0 2 0 2 0 2 0 2 0)
	(0 0 0 0 0 0 2 2 0 2 2 2 0 2)
	(0 0 0 0 0 0 2 0 2 0 2 0 2 0)
	(0 0 0 0 0 0 0 2 2 2 0 2 2 2)
	(0 0 0 0 0 0 2 0 2 0 2 0 2 0)
	(0 0 0 0 0 0 2 2 0 2 2 2 0 0)
	(0 0 0 0 2 0 2 0 2 0 2 0 0 0)
	))

(defun test-board-a ()
	'(
	(0 0 0 0 2 2 0 0 2 0 2 0 2 0)
	(0 0 0 0 2 2 0 2 2 2 0 2 2 2)
	(0 0 0 2 0 0 2 0 2 0 2 0 2 0)
	(0 2 2 0 0 2 2 2 0 2 2 2 0 2)
	(0 2 2 0 2 0 2 0 2 0 2 0 2 0)
	(0 0 0 2 2 2 0 2 2 2 0 2 2 2)
	(0 2 2 0 2 0 2 0 2 0 2 0 2 0)
	(0 2 2 0 0 2 2 2 0 2 2 2 0 2)
	(0 0 0 0 2 0 2 0 2 0 2 0 2 0)
	(0 0 0 2 2 2 0 2 2 2 0 2 2 2)
	(0 0 2 1 2 1 2 0 2 0 2 0 2 0)
	(1 2 2 2 1 2 2 2 0 2 2 2 0 0)
	(0 1 2 1 0 0 2 0 2 0 2 0 2 2)
	(1 0 1 2 1 2 0 2 0 2 0 0 2 2)
	))

(defun test-board-b ()
	'(
	(0 0 0 0 2 2 0 0 2 0 2 0 2 0)
	(0 0 0 0 2 2 0 2 2 2 0 2 2 2)
	(0 0 0 2 0 0 2 0 2 0 2 0 2 0)
	(0 2 2 0 0 2 2 2 0 2 2 2 0 2)
	(0 2 2 0 2 0 2 0 2 0 2 0 2 0)
	(0 0 0 0 2 2 0 2 2 2 0 2 2 2)
	(0 0 0 0 2 0 2 0 2 0 2 0 2 0)
	(0 0 0 0 0 2 2 2 0 2 2 2 0 2)
	(0 0 0 0 2 0 2 0 2 0 2 0 2 0)
	(0 0 0 2 2 2 0 2 2 2 0 2 2 2)
	(0 0 2 1 2 1 2 0 2 0 2 0 2 0)
	(1 2 2 2 1 2 2 2 0 2 2 2 0 0)
	(0 1 2 1 0 0 2 0 2 0 2 0 2 2)
	(1 0 1 2 1 2 0 2 0 2 0 0 2 2)
	))

(defun test-board-c ()
	'(
	(0 0 0 0 2 2 0 0 2 0 2 0 2 0)
	(0 0 0 0 2 2 0 2 2 2 0 2 2 2)
	(0 0 0 2 0 0 2 0 2 0 2 0 2 0)
	(0 2 2 0 0 2 2 2 0 2 2 2 0 2)
	(0 2 2 0 0 0 2 0 2 0 2 0 2 0)
	(0 0 0 0 0 0 0 2 2 2 0 2 2 2)
	(0 0 0 0 0 0 2 0 2 0 2 0 2 0)
	(0 0 0 0 0 2 2 2 0 2 2 2 0 2)
	(0 0 0 0 2 0 2 0 2 0 2 0 2 0)
	(0 0 0 2 2 2 0 2 2 2 0 2 2 2)
	(0 0 2 1 2 1 2 0 2 0 2 0 2 0)
	(1 2 2 2 1 2 2 2 0 2 2 2 0 0)
	(0 1 2 1 0 0 2 0 2 0 2 0 2 2)
	(1 0 1 2 1 2 0 2 0 2 0 0 2 2)
	))

(defun test-board-d ()
	'(
	(0 2 2 0 2 2 0 0 2 0 2 0 0 0)
	(0 2 2 0 2 2 0 2 2 2 0 0 0 0)
	(0 0 0 2 0 0 2 0 2 0 0 0 0 0)
	(0 2 2 0 0 2 2 2 0 0 0 0 0 0)
	(0 2 2 0 2 0 2 0 0 0 0 0 0 0)
	(0 0 0 2 2 2 0 0 0 0 0 1 0 0)
	(0 2 2 0 2 0 2 0 0 0 0 0 1 0)
	(0 2 2 0 0 2 2 2 0 0 0 0 0 1)
	(0 0 0 0 2 0 2 0 0 0 0 0 1 0)
	(0 0 0 2 2 2 0 0 0 0 0 0 0 1)
	(0 0 2 0 2 0 2 0 0 0 0 0 1 0)
	(0 2 2 2 0 2 2 2 0 0 0 0 0 1)
	(0 0 2 0 2 0 2 0 2 0 0 0 1 0)
	(0 0 0 2 0 2 0 2 0 2 0 1 0 1)
	))

(defun test-board-e ()
	'(
	(2 2 0 0 2 2 0 0 2 0 0 0 2 2)
	(2 2 2 0 2 2 0 2 2 2 0 0 2 2)
	(0 2 0 2 0 0 2 0 2 0 2 2 0 0)
	(0 0 2 2 2 0 2 2 0 0 2 2 0 0)
	(2 2 0 2 0 2 0 0 0 0 0 0 0 0)
	(2 2 0 0 2 2 2 0 0 0 0 0 0 0)
	(0 0 2 0 0 2 0 0 0 0 0 0 0 0)
	(0 2 2 2 0 0 2 0 2 0 0 0 2 0)
	(0 0 2 0 0 0 0 2 2 2 0 2 2 2)
	(0 2 0 2 0 0 0 0 2 0 2 0 2 0)
	(0 0 2 2 2 0 0 0 0 2 2 2 0 0)
	(0 2 0 2 0 2 0 0 0 0 2 0 0 0)
	(2 2 2 0 2 2 2 0 0 0 0 0 0 0)
	(2 2 0 0 0 2 0 0 0 0 0 0 0 0)
	))


(defun test-board-f ()
	'(
        (0 0 0 0 0 0 0 0 0 0 0 0 2 2)
	(0 0 0 0 0 0 0 0 0 0 0 0 2 2)
	(0 0 0 0 0 0 0 0 0 0 2 2 0 0)
	(0 0 0 0 0 0 0 0 0 0 2 2 0 0)
	(0 0 0 0 2 2 0 0 2 2 0 0 0 0)
	(0 0 0 0 2 2 0 0 2 2 0 0 0 0)
	(0 0 0 0 0 0 2 2 0 0 0 0 0 0)
	(0 0 0 0 0 0 2 2 0 0 0 0 0 0)
	(0 0 0 0 2 2 0 0 2 2 0 0 0 0)
	(0 0 0 0 2 2 0 0 2 2 0 0 0 0)
	(0 0 2 2 0 0 0 0 0 0 0 0 0 0)
	(0 0 2 2 0 0 0 0 0 0 0 0 0 0)
	(2 2 0 0 0 0 0 0 0 0 0 0 0 0)
	(2 2 0 0 0 0 0 0 0 0 0 0 0 0)
	))

(defun test-board-complete ()
	'(
	(0 0 0 0 2 2 0 0 2 0 2 0 2 0)
	(0 0 0 0 2 2 0 2 2 2 0 2 2 2)
	(0 0 0 2 0 0 2 0 2 0 2 0 2 0)
	(0 2 2 0 0 2 2 2 0 2 2 2 0 2)
	(0 2 2 0 2 0 2 0 2 0 2 0 2 0)
	(0 0 0 2 2 2 0 2 2 2 0 2 2 2)
	(0 2 2 0 2 0 2 0 2 0 2 0 2 0)
	(0 2 2 0 0 2 2 2 0 2 2 2 0 2)
	(0 1 1 0 2 0 2 0 2 0 2 0 2 0)
	(0 1 1 2 2 2 2 2 2 2 0 2 2 2)
	(0 1 2 1 2 1 2 0 2 0 2 0 2 0)
	(1 2 2 2 1 2 2 2 0 2 2 2 0 0)
	(0 1 2 1 0 2 2 0 2 0 2 0 2 2)
	(1 0 1 2 1 2 0 2 0 2 0 0 2 2)
	))

(defun test-node ()
  (list (list (test-board)'(4 10 15)) nil 0 (+ 10 (* 10 4) (* 15 5)) 1 2))

(defun test-node-a ()
  (list (list (test-board-a)'(1 10 15)) nil 0 0 0 0 ))

(defun test-node-b ()
  (list (list (test-board-b)'(1 10 15)) nil 0 0 0 0))

(defun test-node-c ()
  (list (list (test-board-c)'(1 10 15)) nil 0 0 0 0))

(defun test-node-d ()
  (list (list (test-board-d)'(0 10 15)) nil 0 0 0 0))

(defun test-node-e ()
  (list (list (test-board-e)'(10 10 15)) nil 0 0 0 0))

(defun test-node-f ()
  (list (list (test-board-f)'(10 10 15)) nil 0 0 0 0))

(defun test-node-complete ()
  (list (list (test-board-complete)'(0 9 15)) nil 0 0 0 0))

(defun test-node-empty (&optional (size 14))
  (list (list (empty-board size)'(10 10 15)) nil 0 0 0 0))
